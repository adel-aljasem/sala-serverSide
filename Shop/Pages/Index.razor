@page "/"
@inject IJSRuntime js
@inject IUnitOfWork unitOfwork
@inject NavigationManager Nav
@inject RealtimeService realTime
@inject RealtimeServiceOnline realTimeOnline
@inject Extensions ex

<section>

    <div dir="ltr">
        <div>
            <div class="main-slider">
                <WMBlazorSlickCarousel.WMBSC.BlazorSlickCarousel>
                    <BlazorSlickCarouselContent>
                        <div><img src="https://picsum.photos/3000/1000?random=1"></div>
                        <div><img src="https://picsum.photos/3000/1000?random=2"></div>
                        <div><img src="https://picsum.photos/3000/1000?random=3"></div>
                        <div><img src="https://picsum.photos/3000/1000?random=4"></div>
                        <div><img src="https://picsum.photos/3000/1000?random=5"></div>
                        <div><img src="https://picsum.photos/3000/1000?random=6"></div>

                    </BlazorSlickCarouselContent>
                    <BlazorSlickCarouselLoading />

                </WMBlazorSlickCarousel.WMBSC.BlazorSlickCarousel>


            </div>
        </div>
    </div>

</section>

@foreach (var category in CategoryModels)
{
    int indexCategory = 0;
    <section class="section">
        <div class="container">
            <div class="section-header d-flex">
                <h2 class="section--title">
                    <span>@category.Name</span>
                </h2>
                <a class="btn btn-rounded" href="@Nav.BaseUri.Remove(Nav.BaseUri.Length -1,1)/@category.Name">عرض الكل</a>
            </div>
            <div class="row products-grid eq-height">
                @foreach (var product in ProductModel)
                {
                    if (indexCategory >= 4) break;
                    @if (product.IDCategory == category.ID)
                    {
                        indexCategory++;
                        <div class="col-xs-6 col-sm-4 col-lg-3">
                            <div class="product cover">
                                <a href="@Nav.BaseUri.Remove(Nav.BaseUri.Length -1,1)/@product.ID" rel="canonical">
                                    <span class="img-cont">
                                        <img src="@product.Images.LastOrDefault(w=>w.ProductId == product.ID).ImageUrl" class=" lazyloaded">
                                    </span>
                                    <h3 class="product-title">
                                        @product.Name
                                    </h3>
                                    <p class="product-price hidden-md hidden-lg hidden-sm">
                                        <span class="product-price" dir="ltr"> @product.Price ر.س</span>
                                    </p>
                                </a>
                                <div class="product-footer">
                                    <p class="product-price hidden-xs">
                                        <span class="product-price" dir="ltr"> @product.Price ر.س</span>
                                    </p>
                                    <a @onclick="()=> ex.AddToCart(product,orderModel)" class="product-add add_to_cart_btn">
                                        <span class="sicon-cart"></span>
                                        <span>أضف للسلة</span>
                                    </a>
                                </div>
                            </div>
                        </div>
                    }

                }

            </div>
        </div>
    </section>
}

<section class="section" data-type="banner">
    <div class="container banner">
        <a href="#">
            <img src="https://cdn.salla.sa/yAPwR/design/ytPyKDUbcZ8XJOEOSsKevNyJsT4sz0nRn7deWuUO.jpeg" alt="">
        </a>
    </div>
</section>

<section class="py-4 text-center bg-brand">
    <div class="container">
        <h2 class="section--title mb-2 text-white">آراء العملاء</h2>
        <div dir="ltr">
            <WMBlazorSlickCarousel.WMBSC.BlazorSlickCarousel @ref="theCarousel" Configurations="configurations">
                <BlazorSlickCarouselContent>
                    @foreach (var comment in CommentModels)
                    {
                        <div dir="rtl">
                            <div class="testimonials-item" >
                                <blockquote>
                                    @*<ul class="rating">
                                            <li>
                                                <i class="sicon-star2"></i>
                                                <i class="sicon-star2"></i>
                                                <i class="sicon-star2"></i>
                                                <i class="sicon-star2"></i>
                                                <i class="sicon-star2"></i>
                                            </li>
                                        </ul>*@
                                    <div class="testimonials-item__content" style="height: 54px;">
                                        <p> @comment.Message </p>
                                    </div>
                                    <cite class="d-flex">
                                        <img data-src="https://assets.salla.cloud/themes/default/assets/images/avatar_male.png" alt="" src="https://assets.salla.cloud/themes/default/assets/images/avatar_male.png" class=" lazyloaded">
                                        <div class="text-right">
                                            <div>
                                                <span class="testimonials-item__author">
                                                    @comment.User.Name;
                                                </span>
                                            </div>
                                            <span class="testimonials-item__location">
                                            </span>
                                        </div>
                                    </cite>
                                </blockquote>
                            </div>
                        </div>


                    }
                </BlazorSlickCarouselContent>
            </WMBlazorSlickCarousel.WMBSC.BlazorSlickCarousel>

        </div>

    </div>
</section>
<section class="u-light py-5 text-center">
    <div class="container">
        <h2 class="section--title mb-4">مزايا المتجر</h2>
        <div class="row">
            <div class="col-sm-6 col-md-4 feature-item">
                <div class="feature-item__icon">
                    <i class="sicon-shipping-fast"></i>
                </div>
                <h3> شحن سريع </h3>
                <p> خلال ( 24 - 72 ) ساعة </p>
            </div>
            <div class="col-sm-6 col-md-4 feature-item">
                <div class="feature-item__icon">
                    <i class="sicon-banknote-dollar"></i>
                </div>
                <h3> دفع آمن </h3>
                <p> طرق دفع متعددة بالاضافة لخدمة الدفع عند الاستلام </p>
            </div>
            <div class="col-sm-6 col-md-4 feature-item">
                <div class="feature-item__icon">
                    <i class="sicon-headset"></i>
                </div>
                <h3> خدمة عملاء </h3>
                <p> متواجدين لمساعدتكم 24 ساعة </p>
            </div>
        </div>
    </div>
</section>


@code{
    public IEnumerable<ProductModel> ProductModel { get; set; } = new List<ProductModel>();
    public List<CategoryModel> CategoryModels { get; set; } = new List<CategoryModel>();
    private OrderModel orderModel = new OrderModel();
    private bool IsProcessing;
    private string hiden = "";
    WMBSCInitialSettings configurations;
    public List<CommentModel> CommentModels { get; set; }
    public BlazorSlickCarousel theCarousel;

    protected async override Task OnInitializedAsync()
    {

        configurations = new WMBSCInitialSettings
        {
            arrows = false,
            dots = true,
            slidesToShow = 2,
            slidesToScroll = 2,
            infinite = false
        };


        IsProcessing = true;
        CommentModels = unitOfwork.ProductRepository.GetAllComments();
        ProductModel = await unitOfwork.ProductRepository.GetALL();
        CategoryModels = await unitOfwork.CategoryRepository.GetAll();


    }












    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        js.InvokeVoidAsync("headerSlider");

        IsProcessing = false;
    }

}
